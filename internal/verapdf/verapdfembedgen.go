package verapdf

import (
	"fmt"
	"os"
)

// GenerateVeraPDFEmbedGo generates a Go source file that embeds the given veraPDF JAR as a byte slice.
// outPath is typically "internal/verapdf/verapdfembed.go"
func GenerateVeraPDFEmbedGo(jarPath, outPath string) error {
	data, err := os.ReadFile(jarPath)
	if err != nil {
		return fmt.Errorf("could not read veraPDF JAR: %w", err)
	}
	varName := "veraPDFJar"
	f, err := os.Create(outPath)
	if err != nil {
		return fmt.Errorf("could not create embed file: %w", err)
	}
	defer f.Close()
	_, err = fmt.Fprintf(f, "// Code generated by verapdfembedgen.go; DO NOT EDIT.\npackage verapdf\n\nvar %s = []byte{\n", varName)
	if err != nil {
		return err
	}
	for i, b := range data {
		if i%12 == 0 {
			_, err = fmt.Fprint(f, "\n\t")
			if err != nil {
				return err
			}
		}
		_, err = fmt.Fprintf(f, "0x%02x,", b)
		if err != nil {
			return err
		}
	}
	_, err = fmt.Fprintln(f, "\n}")
	return err
}

// Utility: Run this from update-verapdf or a small Go program. Example usage:
//   err := verapdf.GenerateVeraPDFEmbedGo("internal/verapdf/verapdf.jar", "internal/verapdf/verapdfembed.go")
